name: Jetbrains-Help Docker Image CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} 

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set registry environment variable
        run: echo "REGISTRY=ghcr.io" >> $GITHUB_ENV

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:latest
          platforms: linux/amd64,linux/arm64

      - name: Install latest Docker Slim
        run: |
          # 获取最新的版本号
          LATEST_VERSION=$(curl -s https://api.github.com/repos/docker-slim/docker-slim/releases/latest | jq -r .tag_name)
          # 获取下载链接，确保它是 tar.gz 文件
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/docker-slim/docker-slim/releases/latest | jq -r '.assets[] | select(.name | test("linux-amd64.tar.gz")) | .browser_download_url')
          # 打印下载链接供调试
          echo "Download URL: $DOWNLOAD_URL"
          # 下载并安装最新版本的 docker-slim
          curl -sSL $DOWNLOAD_URL | tar -xzv
          sudo mv docker-slim /usr/local/bin/

      - name: Optimize Docker image with Docker Slim
        run: |
          IMAGE_ID=$(docker images --filter "reference=${{ env.REGISTRY }}/${{ github.repository }}:latest" -q)
          docker-slim build $IMAGE_ID --target ${REGISTRY}/${{ github.repository }}:slim-latest

      - name: Push slimmed Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: ${{ env.REGISTRY }}/${{ github.repository }}:slim-latest
          platforms: linux/amd64,linux/arm64
